


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000                 AREA             |.text|, CODE, READONLY
    4 00000000         
    5 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
    6 00000000 400FE108 
                       SYSCTL_PERIPH_GPIOF
                               EQU              0x400FE108
    7 00000000         
    8 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000
    9 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000
   10 00000000         
   11 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction 
   12 00000000         
   13 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect 
   14 00000000         
   15 00000000 00000510 
                       GPIO_O_RES
                               EQU              0x510       ; GPIO resistance d
                                                            e sécurité bumper
   16 00000000         
   17 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le 
   18 00000000 00000030 
                       PORT45  EQU              0x30
   19 00000000 00000003 
                       PORT01  EQU              0x03
   20 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   21 00000000         
   22 00000000                 ENTRY
   23 00000000                 EXPORT           __main
   24 00000000         __main
   25 00000000         
   26 00000000         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
   27 00000000 4E1E            ldr              r6, = SYSCTL_PERIPH_GPIOF ; cha
                                                            rgement de l'horlog
                                                            e dans le registre
   28 00000002 F04F 0030       mov              r0, #0x00000030 ; on active le 
                                                            port F et E qui cor
                                                            espondent au port d
                                                            es leds et des bump
                                                            ers
   29 00000006 6030            str              r0, [r6]
   30 00000008 BF00            NOP
   31 0000000A BF00            NOP
   32 0000000C BF00            NOP                          ;pause de 3 cycles 



ARM Macro Assembler    Page 2 


                                                            soit le temps d'act
                                                            ivation du port
   33 0000000E         
   34 0000000E 4E1C            ldr              r6,= GPIO_PORTF_BASE+GPIO_O_DIR
 
                                                            ; on ajoute a l'adr
                                                            esse de base l'adre
                                                            sse du changement d
                                                            e direction, on va 
                                                            ainsi choisir de mo
                                                            difier un ou plusie
                                                            urs ports en entrée
                                                            s ou sorties
   35 00000010 F04F 0030       ldr              r0, =  PORT45 ; on choisi ici d
                                                            e mettre le port 4 
                                                            et 5 à 1 soit la pr
                                                            emière led
   36 00000014 6030            str              r0, [r6]
   37 00000016         
   38 00000016         ;ldr r6,= GPIO_PORTE_BASE+GPIO_O_DIR  ; on ajoute a l'ad
                       resse de base l'adresse du changement de direction, on v
                       a ainsi choisir de modifier un ou plusieurs ports en ent
                       rées ou sorties
   39 00000016         ;ldr r0, =  PORT01  ; on choisi ici de mettre le port 0 
                       et 1 en sorties soit les deux bumpers
   40 00000016         ;str r0, [r6]
   41 00000016         
   42 00000016 4E1B            ldr              r6, = GPIO_PORTE_BASE+GPIO_O_RE
S 
                                                            ; on emule une resi
                                                            stance pour éviter 
                                                            de cramer les compo
                                                            sants IMPORTANT TOU
                                                            JOURS AVANT ENABLE 
                                                            
   43 00000018 F04F 0003       ldr              r0, = PORT01
   44 0000001C 6030            str              r0, [r6]
   45 0000001E         
   46 0000001E 4E1A            ldr              r6, =  GPIO_PORTF_BASE+GPIO_O_D
EN 
                                                            ;
   47 00000020 F04F 0030       ldr              r0, = PORT45 ; on met à 1 les p
                                                            attes 5 et 4 soit l
                                                            es 2 leds  
   48 00000024 6030            str              r0, [r6]
   49 00000026         
   50 00000026 4E19            ldr              r6, =  GPIO_PORTE_BASE+GPIO_O_D
EN 
                                                            ;
   51 00000028 F04F 0003       ldr              r0, = PORT01 ; on met à 1 les p
                                                            attes 0 et 1 soit l
                                                            es 2 bumpers, on le
                                                            s actives ainsi 
   52 0000002C 6030            str              r0, [r6]
   53 0000002E         
   54 0000002E F04F 0B01       mov              r11,#0x01   ; on assigne au reg
                                                            istre le premier bu
                                                            mper
   55 00000032 F04F 0C02       mov              r12,#0x02   ; on assigne au reg



ARM Macro Assembler    Page 3 


                                                            istre le second bum
                                                            per
   56 00000036 F8DF A058       ldr              r10, = GPIO_PORTE_BASE + (PORT0
1<<2) 
                                                            ;adresse de detecti
                                                            on d'état des bumpe
                                                            rs
   57 0000003A         
   58 0000003A 4E16            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ; Choix de l'intens
                                                            ité de sortie (2mA)
                                                            
   59 0000003C F04F 0030       ldr              r0, = PORT45
   60 00000040 6030            str              r0, [r6]
   61 00000042         
   62 00000042         
   63 00000042 F04F 0710       mov              r7, #0x010  ;allume une des 2 l
                                                            eds
   64 00000046 F04F 0820       mov              r8, #0x020  ;allume une des 2 l
                                                            eds
   65 0000004A F04F 0530       mov              r5, #0x030
   66 0000004E F04F 0300       mov              r3, #0x000  ; extinction des le
                                                            ds    
   67 00000052 4E11            ldr              r6, = GPIO_PORTF_BASE + (PORT45
<<2) 
                                                            ;adresse stockant l
                                                            'état des leds
   68 00000054         
   69 00000054         ;;FIN configuration 
   70 00000054         
   71 00000054         
   72 00000054         ;¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨PARTIE PROGRAMME
   73 00000054         
   74 00000054         
   75 00000054 F8DA 9000 
                       boucle  ldr              r9,[r10]    ;on recupére la val
                                                            eure contenue dans 
                                                            r10
   76 00000058 F1B9 0F00       cmp              r9,#0
   77 0000005C D100            bne              saute
   78 0000005E 6033            str              r3,[r6]     ;on stocke dans r6 
                                                            (etat led) la valeu
                                                            r 0 soit l'extincti
                                                            on des leds.
   79 00000060         
   80 00000060 F1B9 0F01 
                       saute   cmp              r9,#0x01    ; si bumper n°1 est
                                                             enfoncé (1)
   81 00000064 D100            bne              saute2
   82 00000066 6037            str              r7,[r6]     ;on éteint une des 
                                                            2 leds
   83 00000068         
   84 00000068 F1B9 0F02 
                       saute2  cmp              r9,#0x02
   85 0000006C D101            bne              saute3
   86 0000006E F8C6 8000       str              r8,[r6]
   87 00000072         
   88 00000072 F1B9 0F03 



ARM Macro Assembler    Page 4 


                       saute3  cmp              r9,#0x03    ; on regarde si les
                                                             2 bumpers sont enf
                                                            oncés.
   89 00000076 D1ED            bne              boucle
   90 00000078 6035            str              r5,[r6]     ; on eteint les 2 l
                                                            eds
   91 0000007A E7EB            b                boucle
   92 0000007C                 END
              400FE108 
              40025400 
              40024510 
              4002551C 
              4002451C 
              4002400C 
              40025500 
              400250C0 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=prog2.d 
-oprog2.o -I"D:\Program files Zenbook (windows)\ARM\RV31\INC" -I"D:\Program fil
es Zenbook (windows)\ARM\CMSIS\Include" -I"D:\Program files Zenbook (windows)\A
RM\Inc\Luminary" --predefine="__MICROLIB SETA 1" --list=prog2.lst prog2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 3 in file prog2.s
   Uses
      None
Comment: .text unused
__main 00000000

Symbol: __main
   Definitions
      At line 24 in file prog2.s
   Uses
      At line 23 in file prog2.s
Comment: __main used once
boucle 00000054

Symbol: boucle
   Definitions
      At line 75 in file prog2.s
   Uses
      At line 89 in file prog2.s
      At line 91 in file prog2.s

saute 00000060

Symbol: saute
   Definitions
      At line 80 in file prog2.s
   Uses
      At line 77 in file prog2.s
Comment: saute used once
saute2 00000068

Symbol: saute2
   Definitions
      At line 84 in file prog2.s
   Uses
      At line 81 in file prog2.s
Comment: saute2 used once
saute3 00000072

Symbol: saute3
   Definitions
      At line 88 in file prog2.s
   Uses
      At line 85 in file prog2.s
Comment: saute3 used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 20 in file prog2.s
   Uses
      None
Comment: DUREE unused
GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 17 in file prog2.s
   Uses
      At line 46 in file prog2.s
      At line 50 in file prog2.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 11 in file prog2.s
   Uses
      At line 34 in file prog2.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 13 in file prog2.s
   Uses
      At line 58 in file prog2.s
Comment: GPIO_O_DR2R used once
GPIO_O_RES 00000510

Symbol: GPIO_O_RES
   Definitions
      At line 15 in file prog2.s
   Uses
      At line 42 in file prog2.s
Comment: GPIO_O_RES used once
GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 9 in file prog2.s
   Uses
      At line 42 in file prog2.s
      At line 50 in file prog2.s
      At line 56 in file prog2.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 8 in file prog2.s
   Uses
      At line 34 in file prog2.s
      At line 46 in file prog2.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 58 in file prog2.s
      At line 67 in file prog2.s

PORT01 00000003

Symbol: PORT01
   Definitions
      At line 19 in file prog2.s
   Uses
      At line 43 in file prog2.s
      At line 51 in file prog2.s
      At line 56 in file prog2.s

PORT45 00000030

Symbol: PORT45
   Definitions
      At line 18 in file prog2.s
   Uses
      At line 35 in file prog2.s
      At line 47 in file prog2.s
      At line 59 in file prog2.s
      At line 67 in file prog2.s

SYSCTL_PERIPH_GPIOF 400FE108

Symbol: SYSCTL_PERIPH_GPIOF
   Definitions
      At line 6 in file prog2.s
   Uses
      At line 27 in file prog2.s
Comment: SYSCTL_PERIPH_GPIOF used once
10 symbols
349 symbols in table
