#include <stdio.h>
#include <unistd.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

int main(int argc, char** argv) {
    if(argc < 2) {
        printf("The miracle never happen.");
        return 1;
    }

    int pid = getpid();
    char* str = argv[1];

    printf("Command line argument: %s\n", str);
    printf("PID: %d\n", pid);

    int mysock = socket(AF_INET, SOCK_DGRAM, 0);

    struct sockaddr_in myaddress;
    myaddress.sin_family = AF_INET;
    myaddress.sin_port = htons(8000);
    myaddress.sin_addr.s_addr = INADDR_ANY;

    int err = bind(mysock, (struct sockaddr*)&myaddress, sizeof(myaddress));
    if(err == -1) {
        perror("Erreur au moment du bind(mysock)");
    }

    struct sockaddr_in destaddress;
    destaddress.sin_family = AF_INET;
    destaddress.sin_port = htons(6666);
    destaddress.sin_addr.s_addr = INADDR_ANY;

    char msg[50], msg2[50];
    sprintf(msg, "%s", str);
    sprintf(msg2, "%d", pid);

    printf("Message sent: %s\n", msg);

    sendto(mysock, msg, 50, 0, (struct sockaddr*)&destaddress, sizeof(destaddress));
    sendto(mysock, msg2,50, 0, (struct sockaddr*)&destaddress, sizeof(destaddress));

    char server_msg[50], server_msg2[50];
    struct sockaddr_in server_address;
    int taille = sizeof(server_address);

    recvfrom(mysock, server_msg, 50, 0, (struct sockaddr*)&server_address, (socklen_t*)&taille);
    recvfrom(mysock, server_msg2, 50, 0, (struct sockaddr*)&server_address, (socklen_t*)&taille);

    printf("Message received: %s\nPID server : %s\n", server_msg,server_msg2);

    return 0;
}
